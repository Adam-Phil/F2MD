#!/bin/bash

session="F2MD"

echo "Scenario is ${1}"
echo "Check is ${2}"
echo "ML Type is ${3}"
echo "Threshold is ${4}"
echo "Feat start is ${5}"
echo "Feat end is ${6}"
if [[ "${3}" == *"LSTM"* ]]; then
    RECURRENCE=${7}
    echo "Recurrence is ${7}"
    LOGGING=${8}
    echo "Logging is ${8}"
    ATTACHING=${9}
    echo "Attaching is ${9}"
    WAITING=${10}
    echo "Waiting is ${10}"
else
    LOGGING=${7}
    echo "Logging is ${7}"
    ATTACHING=${8}
    echo "Attaching is ${8}"
    WAITING=${9}
    echo "Waiting is ${9}"
fi

CUR_DIR="/F2MD"

options_net=("IRTSystemXScenario" "LuSTNanoScenario" "LuSTMiniScenario" "LuSTScenario" "UlmScenario" "EdgeIRTSystemXScenario")
opt_net=${options_net[${1}]}

SAVE_DIR="${CUR_DIR}/machine-learning-server/saveFile"
CLF_DIR="${SAVE_DIR}/clfs"

if [[ -d "${SAVE_DIR}" ]]; then
    echo "Directory ${SAVE_DIR} already exists"
else
    mkdir "${SAVE_DIR}"
fi

if [[ -d "${CLF_DIR}" ]]; then
    echo "Directory ${CLF_DIR} already exists"
else
    mkdir "${CLF_DIR}"
fi

options_check=("Legacy" "Catch" "Experi")
opt_check=${options_check[${2}]}
if [[ ${3} == "SVM_SINGLE" ]]; then
    partition="0.2"
else
    partition="1.0"
fi

ret="${opt_check}-${3}-${opt_net}-ITSG5"

CLF_NAME="clf_${3}_${opt_check}_${partition}.pkl"
CLF_PATH="${CUR_DIR}/${CLF_NAME}"
TO_CLF_PATH="${CLF_DIR}/${CLF_NAME}"
if [[ -f "${CLF_PATH}" ]]; then
    cp "${CLF_PATH}" "${TO_CLF_PATH}"
else
    echo "CLF not saved in this directory"
    exit 1
fi

if [[ "${LOGGING}" == "1" ]]; then
    if [[ "${ATTACHING}" == "1" ]]; then
        /F2MD/executeF2MD -s "${1}" -a 5 -c "${2}" -ad 5 -ml "${3}" -t "${4}" -fs "${5}" -fe "${6}" -r "${RECURRENCE}" -sd 0 -l -at
    else
        if [[ "${ATTACHING}" == "0" ]]; then
            /F2MD/executeF2MD -s "${1}" -a 5 -c "${2}" -ad 5 -ml "${3}" -t "${4}" -fs "${5}" -fe "${6}" -r "${RECURRENCE}" -sd 0 -l
        else
            echo "Attaching can only be 0 (not attaching) or 1 (attaching)"
            exit 1
        fi
    fi
else
    if [[ "${LOGGING}" == "0" ]]; then
        if [[ "${ATTACHING}" == "1" ]]; then
            /F2MD/executeF2MD -s "${1}" -a 5 -c "${2}" -ad 5 -ml "${3}" -t "${4}" -fs "${5}" -fe "${6}" -r "${RECURRENCE}" -sd 0 -at
        else
            if [[ "${ATTACHING}" == "0" ]]; then
                /F2MD/executeF2MD -s "${1}" -a 5 -c "${2}" -ad 5 -ml "${3}" -t "${4}" -fs "${5}" -fe "${6}" -r "${RECURRENCE}" -sd 0
            else
                echo "Attaching can only be 0 (not attaching) or 1 (attaching)"
                exit 1
            fi
        fi
    else
        echo "Logging can only be 0 (non logging) or 1 (logging)"
        exit 1
    fi
fi

echo "---------If waiting is 1 it should initiate the sequence now---------"
if [[ "${WAITING}" == "1" ]]; then
    echo "Looks like waiting was 1"
    # Check if sessions exist and pipe the error when none exist it into the variable
    RUNNING=$(tmux has-session -t $session 2>&1)
    echo "${RUNNING}"
    while [[ $RUNNING == "" ]]; do
        if [[ "${LOGGING}" == "1" ]]; then
            echo "Running Env" >"whole-log.txt"
        fi
        sleep 60
        tail -1 "/F2MD/f2md-results/${ret}/AppV1.dat"
        RUNNING=$(tmux has-session -t $session 2>&1)
    done
fi

exit

#!/bin/bash

session="F2MD"

echo "Scenario is ${1}"
echo "Check is ${2}"
echo "ML Type is ${3}"
echo "Logging is ${4}"
echo "Attaching is ${5}"
echo "Waiting is ${6}"

if [[ "${4}" == "1" ]]; then
    if [[ "${5}" == "1" ]]; then
        /F2MD/executeF2MD -s "${1}" -a 5 -c "${2}" -ad 30 -ml "${3}" -sd 1 -l -at
    else
        if [[ "${5}" == "0" ]]; then
            /F2MD/executeF2MD -s "${1}" -a 5 -c "${2}" -ad 30 -ml "${3}" -sd 1 -l
        else
            echo "Attaching can only be 0 (not attaching) or 1 (attaching)"
            exit 1
        fi
    fi
else
    if [[ "${4}" == "0" ]]; then
        if [[ "${5}" == "1" ]]; then
            /F2MD/executeF2MD -s "${1}" -a 5 -c "${2}" -ad 30 -ml "${3}" -sd 1 -at
        else
            if [[ "${5}" == "0" ]]; then
                /F2MD/executeF2MD -s "${1}" -a 5 -c "${2}" -ad 30 -ml "${3}" -sd 1
            else
                echo "Attaching can only be 0 (not attaching) or 1 (attaching)"
                exit 1
            fi
        fi
    else
        echo "Logging can only be 0 (non logging) or 1 (logging)"
        exit 1
    fi
fi

echo "---------If waiting is 1 it should initiate the sequence now---------"
if [[ "${6}" == "1" ]]; then
    echo "Looks like waiting was 1"
    # Check if sessions exist and pipe the error when none exist it into the variable
    RUNNING=$(tmux has-session -t $session 2>&1)
    echo "${RUNNING}"
    while [[ $RUNNING == "" ]]; do
        if [[ "${4}" == "1" ]]; then
            echo "Running Env" > "whole-log.txt"
        fi
        sleep 1
        RUNNING=$(tmux has-session -t $session 2>&1)
    done
fi

python3 /F2MD/machine-learning-server/MLDatasetCollection.py "${3}" "${2}"
if [[ $3 == "SVM_SINGLE" ]]; then
    python3 /F2MD/machine-learning-server/MLOfflineTrainer.py "${3}" "${2}" "0.2"
else
    python3 /F2MD/machine-learning-server/MLOfflineTrainer.py "${3}" "${2}" "1.0"
fi

if [[ "${4}" == "1" ]]; then
    if [[ "${5}" == "1" ]]; then
        /F2MD/executeF2MD -s "${1}" -a 5 -c "${2}" -ad 5 -ml "${3}" -sd 0 -l -at
    else
        if [[ "${5}" == "0" ]]; then
            /F2MD/executeF2MD -s "${1}" -a 5 -c "${2}" -ad 5 -ml "${3}" -sd 0 -l
        else
            echo "Attaching can only be 0 (not attaching) or 1 (attaching)"
            exit 1
        fi
    fi
else
    if [[ "${4}" == "0" ]]; then
        if [[ "${5}" == "1" ]]; then
            /F2MD/executeF2MD -s "${1}" -a 5 -c "${2}" -ad 5 -ml "${3}" -sd 0 -at
        else
            if [[ "${5}" == "0" ]]; then
                /F2MD/executeF2MD -s "${1}" -a 5 -c "${2}" -ad 5 -ml "${3}" -sd 0
            else
                echo "Attaching can only be 0 (not attaching) or 1 (attaching)"
                exit 1
            fi
        fi
    else
        echo "Logging can only be 0 (non logging) or 1 (logging)"
        exit 1
    fi
fi

echo "---------If waiting is 1 it should initiate the sequence now---------"
if [[ "${6}" == "1" ]]; then
    echo "Looks like waiting was 1"
    # Check if sessions exist and pipe the error when none exist it into the variable
    RUNNING=$(tmux has-session -t $session 2>&1)
    echo "${RUNNING}"
    while [[ $RUNNING == "" ]]; do
        if [[ "${4}" == "1" ]]; then
            echo "Running Env" > "whole-log.txt"
        fi
        sleep 1
        RUNNING=$(tmux has-session -t $session 2>&1)
    done
fi

exit
